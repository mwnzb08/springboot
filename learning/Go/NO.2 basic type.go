package main

import (
	"fmt"
)

func main() {
	//go对于数据类型有严格的转换限制，不同的类型不能直接转换，例如int32直接转int64都不行
	c:=2//开局2只
	d:=2//总数2只
	//兔子问题，三个月下一胎，之后每个月下一胎。新的兔子3个月下一胎，之后每个月下一胎。开局两只兔子。
	//分析问题，简单的计算前几个月的兔子：1  2  3  4  5  6  7  8  9  10
	//                                  2  2  4  6  10 16 26
	//到这里我们发现这完全就是前面两个数字相加等于第三个那么8=42  （26开始全新第三代）a
	//我们算出每个月的兔子，假设兔子寿命5年的话.那么兔子一生就有3096017511840-2个后代。
	for b:=0;b<12*5;b++  {
		if b>1 {
			d = d + c
			c = d - c
		}
		fmt.Println(b+1,">>",d)
	}
	//所以养兔子很赚钱啊。
	//由于并发，可能计算会有误，可以枷锁。
	//同样的使用数组和切片实现则更为简洁
	s:=make([]int ,2)//设置切片起始位置
	s[0]=1
	s[1]=1
	for i:=2;i<10 ;i++  {
		s=append(s,s[i-1]+s[i-2])
	}
	fmt.Print(s)
	a:=map[int]int{}
	a[0]=1
	a[1]=1
	for i:=2;i<10 ;i++  {
		a[i]=a[i-1]+a[i-2]
	}
	for _,v := range a {
		fmt.Print(" ",v)//并发顺序不保证
	}
}
